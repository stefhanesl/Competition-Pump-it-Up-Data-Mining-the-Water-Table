{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1UkwTZd-7u_idKBb-9xk2HR3Q6RGj0vee","timestamp":1681939934147}],"collapsed_sections":["WoIGSxQnDtb1","9U2X5IaAEG_e","2ic2om4dEKy9"],"authorship_tag":"ABX9TyOcmWkVdYnV+6p1k4P51osI"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## <font color='MAGENTA'>**CARGA DE DATOS**</font>"],"metadata":{"id":"WoIGSxQnDtb1"}},{"cell_type":"code","source":["import os\n","#Acceder a documentos desde google drive\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","os.chdir('/content/drive/MyDrive/Master DS/Machine Learning/TAREA/dataset')\n","os.getcwd()  \n","!ls"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t-O3xSsZbykS","executionInfo":{"status":"ok","timestamp":1682183108208,"user_tz":300,"elapsed":3013,"user":{"displayName":"Stefhane Salguero","userId":"17633168135397074930"}},"outputId":"5d9709f6-f4a2-4fc3-ccba-914aa0fb18d0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","datosPumpsLimpios.csv\t     submissionsNBGAUSSIAN.csv\t  testLimpios.csv\n","submissionsDecisionTree.csv  submissionsRandomForest.csv  train.csv\n","submissionsKNN.csv\t     test.csv\t\t\t  train_labels.csv\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split, GridSearchCV\n","from sklearn.naive_bayes import GaussianNB \n","from sklearn.metrics import accuracy_score, f1_score, confusion_matrix, auc, precision_score, recall_score, roc_curve, classification_report\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.pipeline import Pipeline\n","from imblearn.under_sampling import RandomUnderSampler\n","import seaborn as sns\n","import matplotlib.pyplot as plt"],"metadata":{"id":"Z4wQ6vM8cCvi"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":317},"id":"0drmmA1OXiDy","executionInfo":{"status":"ok","timestamp":1682183111222,"user_tz":300,"elapsed":1532,"user":{"displayName":"Stefhane Salguero","userId":"17633168135397074930"}},"outputId":"0ca74b94-d27d-4e2a-93c0-316c362904ec"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      id  gps_height  longitude   latitude  district_code  population  \\\n","0  69572      1390.0  34.938093  -9.856322            5.0       109.0   \n","1   8776      1399.0  34.698766  -2.147466            2.0       280.0   \n","2  34310       686.0  37.460664  -3.821329            4.0       250.0   \n","3  67743       263.0  38.486161 -11.155298           63.0        58.0   \n","4  19728         0.0  31.130847  -1.825359            1.0       150.0   \n","\n","   public_meeting  permit  construction_year    year  ...  source_spring  \\\n","0               1       0             1999.0  2011.0  ...              1   \n","1               1       1             2010.0  2013.0  ...              0   \n","2               1       1             2009.0  2013.0  ...              0   \n","3               1       1             1986.0  2013.0  ...              0   \n","4               1       1             2000.0  2011.0  ...              0   \n","\n","   source_unknown  source_class_surface  source_class_unknown  \\\n","0               0                     0                     0   \n","1               0                     1                     0   \n","2               0                     1                     0   \n","3               0                     0                     0   \n","4               0                     1                     0   \n","\n","   waterpoint_type_communal standpipe  \\\n","0                                   1   \n","1                                   1   \n","2                                   0   \n","3                                   0   \n","4                                   1   \n","\n","   waterpoint_type_communal standpipe multiple  waterpoint_type_dam  \\\n","0                                            0                    0   \n","1                                            0                    0   \n","2                                            1                    0   \n","3                                            1                    0   \n","4                                            0                    0   \n","\n","   waterpoint_type_hand pump  waterpoint_type_improved spring    status_group  \n","0                          0                                0      functional  \n","1                          0                                0      functional  \n","2                          0                                0      functional  \n","3                          0                                0  non functional  \n","4                          0                                0      functional  \n","\n","[5 rows x 99 columns]"],"text/html":["\n","  <div id=\"df-51e90b3e-7791-465c-8516-bb4a91d6143c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>gps_height</th>\n","      <th>longitude</th>\n","      <th>latitude</th>\n","      <th>district_code</th>\n","      <th>population</th>\n","      <th>public_meeting</th>\n","      <th>permit</th>\n","      <th>construction_year</th>\n","      <th>year</th>\n","      <th>...</th>\n","      <th>source_spring</th>\n","      <th>source_unknown</th>\n","      <th>source_class_surface</th>\n","      <th>source_class_unknown</th>\n","      <th>waterpoint_type_communal standpipe</th>\n","      <th>waterpoint_type_communal standpipe multiple</th>\n","      <th>waterpoint_type_dam</th>\n","      <th>waterpoint_type_hand pump</th>\n","      <th>waterpoint_type_improved spring</th>\n","      <th>status_group</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>69572</td>\n","      <td>1390.0</td>\n","      <td>34.938093</td>\n","      <td>-9.856322</td>\n","      <td>5.0</td>\n","      <td>109.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1999.0</td>\n","      <td>2011.0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>functional</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>8776</td>\n","      <td>1399.0</td>\n","      <td>34.698766</td>\n","      <td>-2.147466</td>\n","      <td>2.0</td>\n","      <td>280.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2010.0</td>\n","      <td>2013.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>functional</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>34310</td>\n","      <td>686.0</td>\n","      <td>37.460664</td>\n","      <td>-3.821329</td>\n","      <td>4.0</td>\n","      <td>250.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2009.0</td>\n","      <td>2013.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>functional</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>67743</td>\n","      <td>263.0</td>\n","      <td>38.486161</td>\n","      <td>-11.155298</td>\n","      <td>63.0</td>\n","      <td>58.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1986.0</td>\n","      <td>2013.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>non functional</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>19728</td>\n","      <td>0.0</td>\n","      <td>31.130847</td>\n","      <td>-1.825359</td>\n","      <td>1.0</td>\n","      <td>150.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2000.0</td>\n","      <td>2011.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>functional</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 99 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-51e90b3e-7791-465c-8516-bb4a91d6143c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-51e90b3e-7791-465c-8516-bb4a91d6143c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-51e90b3e-7791-465c-8516-bb4a91d6143c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}],"source":["df = pd.read_csv('datosPumpsLimpios.csv') \n","df.head()"]},{"cell_type":"code","source":["X = df.drop(columns = ['id', 'status_group']).values\n","y = df['status_group'].values"],"metadata":{"id":"CMhLSuuEc34w"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X.shape"],"metadata":{"id":"zCfwNAmRBMg3","executionInfo":{"status":"ok","timestamp":1682183111224,"user_tz":300,"elapsed":24,"user":{"displayName":"Stefhane Salguero","userId":"17633168135397074930"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"7244ad27-684c-43f5-fed1-a2dd8fc1f184"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(59400, 97)"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["y.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q3HYY3TTXmZX","executionInfo":{"status":"ok","timestamp":1682183111225,"user_tz":300,"elapsed":16,"user":{"displayName":"Stefhane Salguero","userId":"17633168135397074930"}},"outputId":"5dfc430b-63e7-43a6-c676-31be1b2aff44"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(59400,)"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["## <font color='MAGENTA'>**ENTRENAMIENTO DEL MODELO**</font>"],"metadata":{"id":"9U2X5IaAEG_e"}},{"cell_type":"code","source":["Xtrain, Xtest, ytrain, ytest = train_test_split(X, y, random_state=42)"],"metadata":{"id":"YUH7DTmqae2Q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model = GaussianNB() \n","model.fit(Xtrain, ytrain)\n","y_model = model.predict(Xtest)"],"metadata":{"id":"hmtqDL8vagxe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(classification_report(ytest, y_model))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xTM5ql9wI-se","executionInfo":{"status":"ok","timestamp":1682183112829,"user_tz":300,"elapsed":1287,"user":{"displayName":"Stefhane Salguero","userId":"17633168135397074930"}},"outputId":"ae32b3a2-e365-43c8-f510-411036a89ee8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                         precision    recall  f1-score   support\n","\n","             functional       0.72      0.39      0.50      8098\n","functional needs repair       0.11      0.72      0.20      1074\n","         non functional       0.65      0.42      0.51      5678\n","\n","               accuracy                           0.42     14850\n","              macro avg       0.49      0.51      0.40     14850\n","           weighted avg       0.65      0.42      0.48     14850\n","\n"]}]},{"cell_type":"markdown","source":["<font color='green'>**AnÃ¡lisis:** </font> En general, el modelo tuvo un rendimiento mediocre en las tres categorÃ­as, con puntajes F1 que van desde 0.20 hasta 0.51. La precisiÃ³n general del modelo fue del 42%, lo que indica que el modelo predijo correctamente la categorÃ­a correcta para el 42% de los casos de prueba. La media ponderada de los puntajes F1 indica que el modelo tuvo un mejor rendimiento en la categorÃ­a \"funcional\", mientras que la media de la macro de los puntajes F1 indica que el modelo tuvo un rendimiento relativamente uniforme en las tres categorÃ­as."],"metadata":{"id":"VvtLSr9FG_vf"}},{"cell_type":"markdown","source":["## <font color='MAGENTA'>**MEJORANDO EL MODELO**</font>"],"metadata":{"id":"A1W60osIEJtR"}},{"cell_type":"code","source":["\n","X = X.copy() \n","y = y.copy()\n","\n","# Submuestrear la clase mayoritaria\n","rus = RandomUnderSampler(random_state=42)\n","X_resampled, y_resampled = rus.fit_resample(X, y)\n","\n","# Separar los datos de entrenamiento y prueba\n","X_train, X_test, y_train, y_test = train_test_split(X_resampled, y_resampled, test_size=0.2, random_state=42)\n","\n","# Definir la tuberÃ­a\n","pipe = Pipeline([('scaler', StandardScaler()), ('clf', GaussianNB())])\n","\n","# Definir los parÃ¡metros de la cuadrÃ­cula a buscar\n","params = {\n","    'clf__var_smoothing': [1e-10, 1e-9, 1e-8, 1e-7, 1e-6],\n","}\n","\n","# Realizar la bÃºsqueda de cuadrÃ­cula\n","grid_search = GridSearchCV(pipe, params, cv=5, n_jobs=-1, scoring='accuracy')\n","grid_search.fit(X_train, y_train)\n","\n","# Imprimir los resultados\n","print('Mejores parÃ¡metros:', grid_search.best_params_)\n","print('PuntuaciÃ³n de entrenamiento:', grid_search.best_score_)\n","print('PuntuaciÃ³n de prueba:', grid_search.score(X_test, y_test))\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"grnFolpvJU5J","executionInfo":{"status":"ok","timestamp":1682183154369,"user_tz":300,"elapsed":3222,"user":{"displayName":"Stefhane Salguero","userId":"17633168135397074930"}},"outputId":"29a84097-c26f-4a4e-d869-73d8ceb42bac"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mejores parÃ¡metros: {'clf__var_smoothing': 1e-06}\n","PuntuaciÃ³n de entrenamiento: 0.4805984555984556\n","PuntuaciÃ³n de prueba: 0.4797375530683134\n"]}]},{"cell_type":"markdown","source":["<font color='green'>**AnÃ¡lisis:** </font> Para mejorar el modelo debemos de utilizar el hiperparametro para suavizar la varianza su valor optimo es de clf__var_smoothing': 1e-06"],"metadata":{"id":"EqDV0HFRIKOF"}},{"cell_type":"code","source":["optimal_params = {'var_smoothing': 1e-06}\n","pipe = Pipeline([('scaler', StandardScaler()), ('clf', GaussianNB(**optimal_params))])\n","pipe.fit(X_train, y_train)\n","y_pred = pipe.predict(X_test)\n","\n","acc = accuracy_score(y_test, y_pred)\n","f1 = f1_score(y_test, y_pred, average='weighted')\n","\n","print('PrecisiÃ³n:', acc)\n","print('Puntaje F1:', f1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fOpX7GdAKpJt","executionInfo":{"status":"ok","timestamp":1682183154370,"user_tz":300,"elapsed":13,"user":{"displayName":"Stefhane Salguero","userId":"17633168135397074930"}},"outputId":"9538d7e2-35ea-4af5-d9ca-9ef895ef46a1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["PrecisiÃ³n: 0.4797375530683134\n","Puntaje F1: 0.4498411622785646\n"]}]},{"cell_type":"markdown","source":["<font color='green'>**AnÃ¡lisis:** </font> Podemos observar que el modelo mejoro 0.05 en precisiÃ³n pero en F1 bajo 0.04. Estos resultados sugieren que el modelo de Naive Bayes podrÃ­a no ser la mejor opciÃ³n para predecir la condiciÃ³n de los pozos de agua en Tanzania, y que podrÃ­an ser necesarios otros modelos o enfoques para mejorar la precisiÃ³n y la exhaustividad de las predicciones."],"metadata":{"id":"91JWrnUJM31Y"}},{"cell_type":"code","source":["print(classification_report(y_test, pipe.predict(X_test)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vx6xDeXOALfR","executionInfo":{"status":"ok","timestamp":1682183154371,"user_tz":300,"elapsed":10,"user":{"displayName":"Stefhane Salguero","userId":"17633168135397074930"}},"outputId":"fce27ef0-d061-4318-9101-be9865b449ba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                         precision    recall  f1-score   support\n","\n","             functional       0.57      0.28      0.38       874\n","functional needs repair       0.42      0.86      0.57       856\n","         non functional       0.64      0.30      0.41       861\n","\n","               accuracy                           0.48      2591\n","              macro avg       0.54      0.48      0.45      2591\n","           weighted avg       0.54      0.48      0.45      2591\n","\n"]}]},{"cell_type":"code","source":["# Matriz de confusiÃ³n\n","confusion = pd.DataFrame(confusion_matrix(y_test, pipe.predict(X_test)))\n","\n","# Etiquetas para el eje x e y\n","labels = np.unique(y_train)\n","\n","# Crear el mapa de calor utilizando la funciÃ³n heatmap de Seaborn\n","sns.heatmap(confusion, annot=True, cmap='Blues', fmt='g', xticklabels=labels, yticklabels=labels)\n","\n","# Configurar las etiquetas del eje x e y\n","plt.xlabel('Predicted')\n","plt.ylabel('True')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"acbDxEDlQV__","executionInfo":{"status":"ok","timestamp":1682183154801,"user_tz":300,"elapsed":436,"user":{"displayName":"Stefhane Salguero","userId":"17633168135397074930"}},"outputId":"50ee5eb6-85ba-4d24-fe85-201e9855d48b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["La clase functional: el modelo clasificÃ³ correctamente 247 muestras como functional, pero tambiÃ©n clasificÃ³ 532 muestras de esta clase como non functional y 95 muestras como functional needs repair.\n","\n","La clase non functional: el modelo clasificÃ³ correctamente 738 muestras como non functional, pero tambiÃ©n clasificÃ³ 66 muestras de esta clase como functional y 52 muestras como functional needs repair.\n","\n","La clase functional needs repair: el modelo clasificÃ³ correctamente 258 muestras como functional needs repair, pero tambiÃ©n clasificÃ³ 120 muestras de esta clase como functional y 483 muestras como non functional."],"metadata":{"id":"lq6MOWxBTOMd"}},{"cell_type":"markdown","source":["## <font color='MAGENTA'>**PROBANDO CON EL DATASET DE TEST**</font>"],"metadata":{"id":"2ic2om4dEKy9"}},{"cell_type":"markdown","source":["Replicamos lo que ya hicimos en la mejora del modelo pero ahora con los datos de prueba para luego ingresarlos a la pagina de datadriven"],"metadata":{"id":"hDGKwv_yZ1Fc"}},{"cell_type":"code","source":["test = pd.read_csv('testLimpios.csv')\n","test.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":317},"id":"UDNC04Wu4WFm","executionInfo":{"status":"ok","timestamp":1682183155159,"user_tz":300,"elapsed":374,"user":{"displayName":"Stefhane Salguero","userId":"17633168135397074930"}},"outputId":"e3766001-8560-4d33-b679-2edbfe97df3d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      id  gps_height  longitude   latitude  district_code  population  \\\n","0  50785      1996.0  35.290799  -4.059696            3.0       321.0   \n","1  51630      1569.0  36.656709  -3.309214            2.0       300.0   \n","2  17168      1567.0  34.767863  -5.004344            2.0       500.0   \n","3  45559       267.0  38.058046  -9.418672           43.0       250.0   \n","4  49871      1260.0  35.006123 -10.950412            3.0        60.0   \n","\n","   public_meeting  permit  construction_year    year  ...  \\\n","0               1       1             2012.0  2013.0  ...   \n","1               1       1             2000.0  2013.0  ...   \n","2               1       1             2010.0  2013.0  ...   \n","3               1       1             1987.0  2013.0  ...   \n","4               1       1             2000.0  2013.0  ...   \n","\n","   source_shallow well  source_spring  source_unknown  source_class_surface  \\\n","0                    0              0               0                     1   \n","1                    0              1               0                     0   \n","2                    0              0               0                     1   \n","3                    1              0               0                     0   \n","4                    0              1               0                     0   \n","\n","   source_class_unknown  waterpoint_type_communal standpipe  \\\n","0                     0                                   0   \n","1                     0                                   1   \n","2                     0                                   0   \n","3                     0                                   0   \n","4                     0                                   1   \n","\n","   waterpoint_type_communal standpipe multiple  waterpoint_type_dam  \\\n","0                                            0                    0   \n","1                                            0                    0   \n","2                                            0                    0   \n","3                                            0                    0   \n","4                                            0                    0   \n","\n","   waterpoint_type_hand pump  waterpoint_type_improved spring  \n","0                          0                                0  \n","1                          0                                0  \n","2                          0                                0  \n","3                          0                                0  \n","4                          0                                0  \n","\n","[5 rows x 98 columns]"],"text/html":["\n","  <div id=\"df-05ca10ee-20b2-4421-a53b-c64ad9e0a078\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>gps_height</th>\n","      <th>longitude</th>\n","      <th>latitude</th>\n","      <th>district_code</th>\n","      <th>population</th>\n","      <th>public_meeting</th>\n","      <th>permit</th>\n","      <th>construction_year</th>\n","      <th>year</th>\n","      <th>...</th>\n","      <th>source_shallow well</th>\n","      <th>source_spring</th>\n","      <th>source_unknown</th>\n","      <th>source_class_surface</th>\n","      <th>source_class_unknown</th>\n","      <th>waterpoint_type_communal standpipe</th>\n","      <th>waterpoint_type_communal standpipe multiple</th>\n","      <th>waterpoint_type_dam</th>\n","      <th>waterpoint_type_hand pump</th>\n","      <th>waterpoint_type_improved spring</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>50785</td>\n","      <td>1996.0</td>\n","      <td>35.290799</td>\n","      <td>-4.059696</td>\n","      <td>3.0</td>\n","      <td>321.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2012.0</td>\n","      <td>2013.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>51630</td>\n","      <td>1569.0</td>\n","      <td>36.656709</td>\n","      <td>-3.309214</td>\n","      <td>2.0</td>\n","      <td>300.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2000.0</td>\n","      <td>2013.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>17168</td>\n","      <td>1567.0</td>\n","      <td>34.767863</td>\n","      <td>-5.004344</td>\n","      <td>2.0</td>\n","      <td>500.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2010.0</td>\n","      <td>2013.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>45559</td>\n","      <td>267.0</td>\n","      <td>38.058046</td>\n","      <td>-9.418672</td>\n","      <td>43.0</td>\n","      <td>250.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1987.0</td>\n","      <td>2013.0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>49871</td>\n","      <td>1260.0</td>\n","      <td>35.006123</td>\n","      <td>-10.950412</td>\n","      <td>3.0</td>\n","      <td>60.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2000.0</td>\n","      <td>2013.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 98 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-05ca10ee-20b2-4421-a53b-c64ad9e0a078')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-05ca10ee-20b2-4421-a53b-c64ad9e0a078 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-05ca10ee-20b2-4421-a53b-c64ad9e0a078');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["X2 = test.drop(columns = ['id']).values\n","X2.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KIEXRg2X_x2a","executionInfo":{"status":"ok","timestamp":1682183155160,"user_tz":300,"elapsed":41,"user":{"displayName":"Stefhane Salguero","userId":"17633168135397074930"}},"outputId":"e6a44843-7613-40de-89df-34c95feba228"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(14850, 97)"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["X.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GEPlphCICV8e","executionInfo":{"status":"ok","timestamp":1682183155164,"user_tz":300,"elapsed":41,"user":{"displayName":"Stefhane Salguero","userId":"17633168135397074930"}},"outputId":"3b4b0387-b6c8-46c6-d50f-e57b1eff6d27"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(59400, 97)"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["y.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TN8P_Uw9Ca0L","executionInfo":{"status":"ok","timestamp":1682183155164,"user_tz":300,"elapsed":38,"user":{"displayName":"Stefhane Salguero","userId":"17633168135397074930"}},"outputId":"0408de3b-dcb2-421d-a2da-94d9d0e01b21"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(59400,)"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["y_pred = pipe.predict(X2)"],"metadata":{"id":"VQppV1BoNRzA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ypredict = pd.DataFrame(y_pred)"],"metadata":{"id":"uhksYNZ04VuS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ypredict.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4mOOJZKLFFs8","executionInfo":{"status":"ok","timestamp":1682183155166,"user_tz":300,"elapsed":35,"user":{"displayName":"Stefhane Salguero","userId":"17633168135397074930"}},"outputId":"eef7f447-0977-4fbb-b23a-a788032b4b81"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["functional needs repair    8978\n","functional                 3270\n","non functional             2602\n","dtype: int64"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["print(test.shape, ypredict.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_bY2taFF-C88","executionInfo":{"status":"ok","timestamp":1682183155169,"user_tz":300,"elapsed":36,"user":{"displayName":"Stefhane Salguero","userId":"17633168135397074930"}},"outputId":"788cea1e-79e4-4c64-9e78-76853573e501"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(14850, 98) (14850, 1)\n"]}]},{"cell_type":"code","source":["submit = pd.concat((test['id'], ypredict), axis=1)"],"metadata":{"id":"27PVLPzPAiWS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["submit.columns = ['id', 'status_group']"],"metadata":{"id":"wZsCsMSlAvdf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["submit.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"J4dsDS5iA5A9","executionInfo":{"status":"ok","timestamp":1682183155451,"user_tz":300,"elapsed":28,"user":{"displayName":"Stefhane Salguero","userId":"17633168135397074930"}},"outputId":"83442612-7eda-42ae-a6f0-28dd37983d4f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      id             status_group\n","0  50785  functional needs repair\n","1  51630  functional needs repair\n","2  17168  functional needs repair\n","3  45559           non functional\n","4  49871  functional needs repair"],"text/html":["\n","  <div id=\"df-ece54efd-4b9b-4945-800e-e17f6fad55c9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>status_group</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>50785</td>\n","      <td>functional needs repair</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>51630</td>\n","      <td>functional needs repair</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>17168</td>\n","      <td>functional needs repair</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>45559</td>\n","      <td>non functional</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>49871</td>\n","      <td>functional needs repair</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ece54efd-4b9b-4945-800e-e17f6fad55c9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ece54efd-4b9b-4945-800e-e17f6fad55c9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ece54efd-4b9b-4945-800e-e17f6fad55c9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["submit.to_csv('submissionsNBGAUSSIAN.csv', index=False)"],"metadata":{"id":"7fWm-a8UCmbj"},"execution_count":null,"outputs":[]}]}